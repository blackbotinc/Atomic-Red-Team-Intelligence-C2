#TechniqueName: Account Manipulation
#AtomicTestName: Domain Account and Group Manipulate
#Description: Create a random atr-nnnnnnnn account and add it to a domain group (by default, Domain Admins). &&The quickest way to run it is against a domain controller, using `-Session` of `Invoke-AtomicTest`. Alternatively,&you need to install PS Module ActiveDirectory (in prereqs) and run the script with appropriare AD privileges to &create the user and alter the group. Automatic installation of the dependency requires an elevated session, &and is unlikely to work with Powershell Core (untested).&&If you consider running this test against a production Active Directory, the good practise is to create a dedicated&service account whose delegation is given onto a dedicated OU for user creation and deletion, as well as delegated&as group manager of the target group.&&Example: `Invoke-AtomicTest -Session $session 'T1098' -TestNames "Domain Account and Group Manipulate" -InputArgs @{"group" = "DNSAdmins" }`&
#Language: ps1

#get_prereq_commands
if((Get-CimInstance -ClassName Win32_OperatingSystem).ProductType -eq 1) {
  Add-WindowsCapability -Name (Get-WindowsCapability -Name RSAT.ActiveDirectory.DS* -Online).Name -Online
} else {
  Install-WindowsFeature RSAT-AD-PowerShell
}


#commands
$x = Get-Random -Minimum 2 -Maximum 99
$y = Get-Random -Minimum 2 -Maximum 99
$z = Get-Random -Minimum 2 -Maximum 99
$w = Get-Random -Minimum 2 -Maximum 99

Import-Module ActiveDirectory
$account = "atr--$x$y$z"
New-ADUser -Name $account -GivenName "Test" -DisplayName $account -SamAccountName $account -Surname $account -Enabled:$False 
Add-ADGroupMember "Domain Admins" $account


#cleanup_commands
Get-ADUser -LDAPFilter "(&(samaccountname=atr--*)(givenName=Test))" | Remove-ADUser -Confirm:$False

